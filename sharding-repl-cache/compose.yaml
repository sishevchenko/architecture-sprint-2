# version: "3"

# version: "3"

services:
  configSrv:
    image: mongo:latest # docker образ
    container_name: configSrv 
    restart: always
    ports:
      - "27017:27017"
    networks:
      - mongo_network
    volumes:
      - config-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ] 
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1:
    image: mongo:latest
    container_name: shard1
    restart: always
    depends_on:
      - configSrv
    ports:
      - "27027:27017"
    networks:
      - mongo_network
    volumes:
      - shard1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1-repl1:
    image: mongo:latest
    container_name: shard1-repl1
    restart: always
    depends_on:
      - shard1
      - configSrv
    ports:
      - "27021:27021"
    networks:
      - mongo_network
    volumes:
      - shard1-repl1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27021"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1-repl2:
    image: mongo:latest
    container_name: shard1-repl2
    restart: always
    depends_on:
      - shard1
      - configSrv
    ports:
      - "27023:27023"
    networks:
      - mongo_network
    volumes:
      - shard1-repl2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27023"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2:
    image: mongo:latest
    container_name: shard2
    restart: always
    depends_on:
      - configSrv
    ports:
      - "27019:27019"
    networks:
      - mongo_network
    volumes:
      - shard2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27019"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2-repl1:
    image: mongo:latest
    container_name: shard2-repl1
    restart: always
    depends_on:
      - shard2
      - configSrv
    ports:
      - "27022:27022"
    networks:
      - mongo_network
    volumes:
      - shard2-repl1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27022"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2-repl2:
    image: mongo:latest
    container_name: shard2-repl2
    restart: always
    depends_on:
      - shard2
      - configSrv
    ports:
      - "27024:27024"
    networks:
      - mongo_network
    volumes:
      - shard2-repl2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27024"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    depends_on:
      - shard1
      - shard2
    ports:
      - "27020:27020"
    networks:
      - mongo_network
    command:
      [
        "mongos",
        "--configdb", 
        "config_server/configSrv:27017",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  redis:
    image: "redis:latest"
    container_name: redis
    ports:
      - "6379"
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    networks:
      - redis-network

  pymongo_api:
    container_name: pymongo_api
    build: 
      context: ./api_app/
      dockerfile: Dockerfile
    depends_on:
      - mongos_router
      - redis
    ports:
      - 8080:8080
    networks:
      - mongo_network
      - redis-network
    environment:
      MONGODB_URL: mongodb://mongos_router:27020/
      MONGODB_DATABASE_NAME: "somedb"
      REDIS_URL: "redis:6379"
    volumes:
      - ./api_app/:/app/


networks:
  mongo_network:
    driver: bridge
  
  redis-network:
    driver: bridge


volumes:
  config-data:
  shard1-data:
  shard2-data:
  shard1-repl1-data:
  shard2-repl1-data:
  shard1-repl2-data:
  shard2-repl2-data:

  redis_data: {}
